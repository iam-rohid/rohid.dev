---
import type { CollectionEntry } from "astro:content";
import { cn } from "@/lib/utils";
import { Image } from "astro:assets";
import { getEntries } from "astro:content";
import { buttonVariants } from "@/styles/button-variants";

interface Props {
  project: CollectionEntry<"projects">;
}

const { project } = Astro.props;

const technologies = await getEntries(project.data.technologies);
---

<div class="group hover:bg-muted/50 relative p-4 md:rounded-xl">
  <a
    href={project.data.url}
    class="peer absolute inset-0 focus:outline md:rounded-xl"
    target="_blank"
    rel="nofollow"
  >
    <span class="sr-only">{project.data.name}</span>
  </a>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="text-muted-foreground peer-hover:text-foreground pointer-events-none absolute top-4 right-4 h-5 w-5 transition-colors duration-200"
    ><path d="M15 3h6v6"></path><path d="M10 14 21 3"></path><path
      d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path></svg
  >
  <div class="flex gap-4 max-md:flex-col">
    <div class="relative h-14 w-14">
      <Image
        src={project.data.icon}
        alt={`${project.data.name} icon`}
        width={128}
        height={128}
        class={cn(
          "absolute top-0 right-0 bottom-0 left-0 block aspect-square overflow-hidden rounded-xl object-contain",
          {
            "dark:hidden": !!project.data.iconDark,
          }
        )}
      />
      {
        project.data.iconDark && (
          <Image
            src={project.data.iconDark}
            alt={`${project.data.name} icon dark`}
            width={128}
            height={128}
            class="absolute top-0 right-0 bottom-0 left-0 hidden aspect-square overflow-hidden rounded-xl object-contain dark:block"
          />
        )
      }
    </div>

    <div class="flex-1">
      <h3 class="font-semibold">{project.data.name}</h3>
      <p class="text-muted-foreground mt-2 leading-6">
        {project.data.description}
      </p>
      <div class="mt-4 flex flex-wrap gap-2">
        {
          technologies.map((tech) => (
            <div
              class={cn(
                buttonVariants({
                  variant: "outline",
                }),
                "text-muted-foreground pointer-events-none z-10 h-fit rounded-full bg-transparent py-1.5 pr-2.5 pl-1.5 leading-4"
              )}
            >
              <div class="relative mr-1 h-4 w-4">
                <Image
                  src={tech.data.icon}
                  alt={`${tech.data.name} icon`}
                  width={128}
                  height={128}
                  class={cn(
                    "absolute top-0 right-0 bottom-0 left-0 block aspect-square object-contain",
                    {
                      "dark:hidden": !!tech.data.iconDark,
                    }
                  )}
                />
                {tech.data.iconDark && (
                  <Image
                    src={tech.data.iconDark}
                    alt={`${tech.data.name} icon dark`}
                    width={128}
                    height={128}
                    class="absolute top-0 right-0 bottom-0 left-0 hidden aspect-square object-contain dark:block"
                  />
                )}
              </div>
              {tech.data.name}
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>
